DROP TABLE IF EXISTS Shift;
DROP TABLE IF EXISTS works;
DROP TABLE IF EXISTS Professors;
DROP TABLE IF EXISTS Departments;

CREATE TABLE Departments (
    dept_id INT PRIMARY KEY AUTO_INCREMENT,
    dept_name VARCHAR(100)
);

CREATE TABLE Professors (
    prof_id INT PRIMARY KEY AUTO_INCREMENT,
    prof_fname VARCHAR(50),
    prof_lname VARCHAR(50),
    dept_id INT,
    designation VARCHAR(50),
    salary DECIMAL(10, 2),
    doj DATE,
    email VARCHAR(100),
    phone VARCHAR(20),
    city VARCHAR(50),
    FOREIGN KEY (dept_id) REFERENCES Departments(dept_id) ON DELETE CASCADE
);

CREATE TABLE works (
    prof_id INT,
    dept_id INT,
    duration INT,
    PRIMARY KEY (prof_id, dept_id),
    FOREIGN KEY (prof_id) REFERENCES Professors(prof_id) ON DELETE CASCADE,
    FOREIGN KEY (dept_id) REFERENCES Departments(dept_id) ON DELETE CASCADE
);

CREATE TABLE Shift (
    prof_id INT PRIMARY KEY,
    shift VARCHAR(20),
    working_hours INT,
    FOREIGN KEY (prof_id) REFERENCES Professors(prof_id) ON DELETE CASCADE
);

INSERT INTO Departments (dept_name) VALUES
('Computer'),
('IT'),
('E&TC');

INSERT INTO Professors (prof_fname, prof_lname, dept_id, designation, salary, doj, email, phone, city) VALUES
('Ajay', 'Shah', 1, 'Professor', 50000, '2015-01-01', 'ajay@p.com', '9111111111', 'Pune'),
('Vijay', 'Patil', 2, 'Asst. Prof', 30000, '2017-06-15', 'vijay@p.com', '9222222222', 'Mumbai'),
('Deepa', 'Mehta', 1, 'Professor', 55000, '2015-08-01', 'deepa@p.com', '9333333333', 'Mumbai'),
('Sunil', 'Kulkarni', 3, 'HOD', 70000, '2012-03-10', 'sunil@p.com', '9444444444', 'Pune'),
('Anil', 'Jain', 2, 'Asst. Prof', 32000, '2018-07-20', 'anil@p.com', '9555555555', 'Delhi'),
('David', 'Warner', 1, 'Assoc. Prof', 40000, '2015-11-05', 'david@p.com', '9666666666', 'Pune'),
('Riya', 'Sen', 3, 'Professor', 48000, '2019-02-18', 'riya@p.com', '9777777777', 'Chennai'),
('Karan', 'Verma', 2, 'Asst. Prof', 15000, '2016-01-01', 'karan@p.com', '9888888888', 'Mumbai'),
('Priya', 'Rane', 1, 'Asst. Prof', 18000, '2020-05-30', 'priya@p.com', '9999999999', 'Pune'),
('Amit', 'Desai', 3, 'Assoc. Prof', 42000, '2015-01-01', 'amit@p.com', '9000000000', 'Delhi');

INSERT INTO works (prof_id, dept_id, duration) VALUES
(1, 1, 10),
(2, 2, 8),
(3, 1, 9),
(4, 3, 13),
(5, 2, 7),
(6, 1, 9),
(7, 3, 6),
(8, 2, 9),
(9, 1, 5),
(10, 3, 10);

INSERT INTO Shift (prof_id, shift, working_hours) VALUES
(1, 'Morning', 8),
(2, 'Afternoon', 8),
(3, 'Morning', 8),
(4, 'General', 9),
(5, 'Afternoon', 8),
(6, 'Morning', 8),
(7, 'Afternoon', 8),
(8, 'Morning', 8),
(9, 'Afternoon', 8),
(10, 'General', 9);

1. Find the professor details and department details using NATURAL JOIN. (Requirement: Natural Join)

SQL

SELECT *
FROM Professors
NATURAL JOIN Departments;
2. Find the prof_id, prof_name and shift. (Requirement: Inner Join / Equi Join)

SQL

SELECT p.prof_id, p.prof_fname, p.prof_lname, s.shift
FROM Professors p
JOIN Shift s ON p.prof_id = s.prof_id;
3. List all the department details and the corresponding names of professors in the same department. (Requirement: Right Outer Join)

SQL

SELECT d.dept_id, d.dept_name, p.prof_fname, p.prof_lname
FROM Professors p
RIGHT JOIN Departments d ON p.dept_id = d.dept_id;
4. List all the professors and the corresponding names of department. (Requirement: Left Outer Join)

SQL

SELECT p.prof_fname, p.prof_lname, d.dept_name
FROM Professors p
LEFT JOIN Departments d ON p.dept_id = d.dept_id;
5. Display professor name, dept_name, shift, salary where prof_id = 101; (Requirement: Inner Join / Equi Join - on 3 tables) (Note: Using prof_id = 1 to match the sample data.)

SQL

SELECT p.prof_fname, d.dept_name, s.shift, p.salary
FROM Professors p
JOIN Departments d ON p.dept_id = d.dept_id
JOIN Shift s ON p.prof_id = s.prof_id
WHERE p.prof_id = 1;
6. list the total number of professor in each department. (Requirement: Count + Join)

SQL

SELECT d.dept_name, COUNT(p.prof_id) AS professor_count
FROM Professors p
JOIN Departments d ON p.dept_id = d.dept_id
GROUP BY d.dept_id, d.dept_name;
7. List the prof_id associated department and the dept_name having name „computer‟; (Requirement: Subquery - Query 1)

SQL

SELECT prof_id, dept_id
FROM Professors
WHERE dept_id = (
    SELECT dept_id
    FROM Departments
    WHERE dept_name = 'Computer'
);
8. Find the names of all departments where the professors joined in year 2015 (or date of joining is 1-1-2015). (Requirement: Subquery - Query 2)

SQL

SELECT dept_name
FROM Departments
WHERE dept_id IN (
    SELECT dept_id
    FROM Professors
    WHERE YEAR(doj) = 2015 OR doj = '2015-01-01'
);
9. Create view showing the professor and shift details. (Requirement: Complex View)

SQL

CREATE VIEW ProfessorShiftDetails AS
SELECT p.prof_id, p.prof_fname, p.prof_lname, s.shift, s.working_hours
FROM Professors p
JOIN Shift s ON p.prof_id = s.prof_id;
10. Perform Manipulation on simple view-Insert, update, delete, drop view. (Requirement: Simple View + Manipulation)

SQL

-- Create a simple view
CREATE VIEW DelhiProfessors AS
SELECT prof_id, prof_fname, prof_lname, city
FROM Professors
WHERE city = 'Delhi';

-- 1. INSERT
INSERT INTO DelhiProfessors (prof_fname, prof_lname, city)
VALUES ('NewProf', 'Sharma', 'Delhi');

-- 2. UPDATE
UPDATE DelhiProfessors
SET prof_lname = 'Jain-Kumar'
WHERE prof_fname = 'Anil';

-- 3. DELETE
DELETE FROM DelhiProfessors
WHERE prof_fname = 'NewProf';

-- 4. DROP the view
DROP VIEW IF EXISTS DelhiProfessors;