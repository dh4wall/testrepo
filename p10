db.createCollection("purchase_orders")

// 2. Insert the documents
db.purchase_orders.insertMany([
  {product: "toothbrush", total: 4.75, customer: "Mike"},
  {product: "guitar", total: 199.99, customer: "Tom"},
  {product: "milk", total: 11.33, customer: "Mike"},
  {product: "pizza", total: 8.50, customer: "Karen"},
  {product: "toothbrush", total: 4.75, customer: "Karen"},
  {product: "pizza", total: 4.75, customer: "Dave"},
  {product: "toothbrush", total: 4.75, customer: "Mike"}
])


2. Implement Indexes
JavaScript

// 1. Single Field Index
db.purchase_orders.createIndex({ customer: 1 })

// 2. Compound Index
db.purchase_orders.createIndex({ customer: 1, product: 1 })

// 3. Multikey Index
// (Note: This requires a field to be an array. 
// This command creates one on a hypothetical 'tags' field)
db.purchase_orders.createIndex({ tags: 1 })
3. Aggregation Queries
1. Find out how many toothbrushes were sold

JavaScript

db.purchase_orders.aggregate([
  { $match: { product: "toothbrush" } },
  { $count: "toothbrush_sales_count" }
])
2. Find how much money has been earned by selling toothbrushes and pizza

JavaScript

db.purchase_orders.aggregate([
  { $match: { product: { $in: ["toothbrush", "pizza"] } } },
  { $group: { _id: "$product", total_earned: { $sum: "$total" } } }
])
3. Find the list of all sold products

JavaScript

db.purchase_orders.distinct("product")
4. Find the total amount of money spent by each customer

JavaScript

db.purchase_orders.aggregate([
  { $group: { _id: "$customer", total_spent: { $sum: "$total" } } }
])
5. Find how much has been spent on each product and sort it (ascending)

JavaScript

db.purchase_orders.aggregate([
  { $group: { _id: "$product", amount_spent: { $sum: "$total" } } },
  { $sort: { amount_spent: 1 } }
])
6. Find the product with least earnings

JavaScript

db.purchase_orders.aggregate([
  { $group: { _id: "$product", amount_spent: { $sum: "$total" } } },
  { $sort: { amount_spent: 1 } },
  { $limit: 1 }
])
7. Find how much money each customer has spent on toothbrushes and pizza

JavaScript

db.purchase_orders.aggregate([
  { $match: { product: { $in: ["toothbrush", "pizza"] } } },
  { $group: { _id: { cust: "$customer", prod: "$product" }, total: { $sum: "$total" } } }
])
8. Find the customer who has given highest business for 'toothbrush'

JavaScript

db.purchase_orders.aggregate([
  { $match: { product: "toothbrush" } },
  { $group: { _id: "$customer", total_spent: { $sum: "$total" } } },
  { $sort: { total_spent: -1 } },
  { $limit: 1 }
])